#Write a python program to  import and export data using Pandas library functions 


# --------------------------
# Load and Display Custom Dataset
# --------------------------
import pandas as pd

# Example 1: Creating DataFrame from dictionary
data_dict = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David'],
    'Age': [25, 30, 35, 40],
    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston']
}
df_dict = pd.DataFrame(data_dict)
print("Sample data from dictionary:")
print(df_dict.head())

# Example 2: Load Iris dataset from sklearn
from sklearn.datasets import load_iris
iris = load_iris()
df_iris = pd.DataFrame(iris.data, columns=iris.feature_names)
df_iris['target'] = iris.target
print("\nSample data from Iris dataset:")
print(df_iris.head())

# Example 3: Load from CSV
df_industry = pd.read_csv('/content/industry.csv')
print("\nSample data from industry.csv:")
print(df_industry.head())

# Example 4: Manual CSV DataFrame
student_data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Evangline'],
    'USN': ['1BM22CS025', '1BM22CS030', '1BM22CS035', '1BM22CS040', '1BM22CS045'],
    'Marks': [25, 30, 35, 40, 45]
}
df_students = pd.DataFrame(student_data)
print("\nSample student data:")
print(df_students.head())

# Example 5: Load Diabetes Dataset
from sklearn.datasets import load_diabetes
dia = load_diabetes()
df_dia = pd.DataFrame(dia.data, columns=dia.feature_names)
df_dia['target'] = dia.target
print("\nSample data from Diabetes dataset:")
print(df_dia.head())

# Example 6: Load California Housing Train CSV
df_california_train = pd.read_csv('/content/sample_data/california_housing_train.csv')
print("\nSample data from california_housing_train.csv:")
print(df_california_train.head())

# Example 7: Load Diabetes CSV
df_diabetes_csv = pd.read_csv('/content/Dataset of Diabetes .csv')
print("\nSample data from Diabetes CSV:")
print(df_diabetes_csv.head())

# Example 8: Read and Write CSV
df_test = pd.read_csv('/content/sample_data/california_housing_test.csv')
print("\nSample data from california_housing_test.csv:")
print(df_test.head())
df_test.to_csv('output.csv', index=False)
print("Data saved to output.csv")

# --------------------------
# Grouping and Aggregation
# --------------------------
# Group by total_rooms
california = df_test.groupby('total_rooms')['total_bedrooms'].sum()
print("\nTotal housing by total_rooms:")
print(california)

# Group by housing_median_age
best_selling_homes = df_test.groupby('housing_median_age')['households'].sum().sort_values(ascending=False)
print("\nBest-selling homes by housing_median_age:")
print(best_selling_homes)

# --------------------------
# Stock Market Data Analysis with yfinance
# --------------------------
import yfinance as yf
import matplotlib.pyplot as plt

# Downloading data
tickers = ["RELIANCE.NS", "TCS.NS", "INFY.NS"]
data = yf.download(tickers, start="2022-10-01", end="2023-10-01", group_by='ticker')

# Show sample data
print("\nFirst 5 rows of stock data:")
print(data.head())
print("\nShape:", data.shape)
print("\nColumns:", data.columns)

# Reliance Data Analysis
reliance_data = data['RELIANCE.NS'].copy()
print("\nSummary statistics for Reliance:")
print(reliance_data.describe())
reliance_data['Daily Return'] = reliance_data['Close'].pct_change()

# Plotting
plt.figure(figsize=(12, 6))
plt.subplot(2, 1, 1)
reliance_data['Close'].plot(title="Reliance Industries - Closing Price")
plt.subplot(2, 1, 2)
reliance_data['Daily Return'].plot(title="Reliance Industries - Daily Returns", color='orange')
plt.tight_layout()
plt.show()


